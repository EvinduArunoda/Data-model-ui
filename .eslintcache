[{"/home/evindu/Projects/Private/Data-model-ui/src/index.js":"1","/home/evindu/Projects/Private/Data-model-ui/src/App.js":"2","/home/evindu/Projects/Private/Data-model-ui/src/reportWebVitals.js":"3","/home/evindu/Projects/Private/Data-model-ui/src/store.js":"4","/home/evindu/Projects/Private/Data-model-ui/src/utils/firebaseConfig.js":"5","/home/evindu/Projects/Private/Data-model-ui/src/Containers/LoginPage/index.js":"6","/home/evindu/Projects/Private/Data-model-ui/src/Containers/HomePage/index.js":"7","/home/evindu/Projects/Private/Data-model-ui/src/redux/login/reducer.js":"8","/home/evindu/Projects/Private/Data-model-ui/src/redux/login/saga.js":"9","/home/evindu/Projects/Private/Data-model-ui/src/Containers/DashboardPage/index.js":"10","/home/evindu/Projects/Private/Data-model-ui/src/Components/MenuBar/index.js":"11","/home/evindu/Projects/Private/Data-model-ui/src/Components/LoadinfIndicator/index.js":"12","/home/evindu/Projects/Private/Data-model-ui/src/redux/login/actions.js":"13","/home/evindu/Projects/Private/Data-model-ui/src/Components/LoadinfIndicator/Wrapper.js":"14","/home/evindu/Projects/Private/Data-model-ui/src/Components/LoadinfIndicator/Circle.js":"15","/home/evindu/Projects/Private/Data-model-ui/src/Components/LoginForm/index.js":"16","/home/evindu/Projects/Private/Data-model-ui/src/Components/react-notifications/index.js":"17","/home/evindu/Projects/Private/Data-model-ui/src/Components/react-notifications/Notifications.js":"18","/home/evindu/Projects/Private/Data-model-ui/src/Components/react-notifications/NotificationManager.js":"19","/home/evindu/Projects/Private/Data-model-ui/src/Components/react-notifications/NotificationContainer.js":"20","/home/evindu/Projects/Private/Data-model-ui/src/Components/react-notifications/Notification.js":"21"},{"size":1185,"mtime":1617895932324,"results":"22","hashOfConfig":"23"},{"size":7705,"mtime":1617908409849,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1617895932324,"results":"25","hashOfConfig":"23"},{"size":1155,"mtime":1617895932324,"results":"26","hashOfConfig":"23"},{"size":550,"mtime":1617895932324,"results":"27","hashOfConfig":"23"},{"size":206,"mtime":1617895932324,"results":"28","hashOfConfig":"23"},{"size":4907,"mtime":1617895932324,"results":"29","hashOfConfig":"23"},{"size":810,"mtime":1617895932324,"results":"30","hashOfConfig":"23"},{"size":720,"mtime":1617895932324,"results":"31","hashOfConfig":"23"},{"size":18102,"mtime":1618040143578,"results":"32","hashOfConfig":"23"},{"size":1919,"mtime":1617904825107,"results":"33","hashOfConfig":"23"},{"size":649,"mtime":1617895932324,"results":"34","hashOfConfig":"23"},{"size":489,"mtime":1617895932324,"results":"35","hashOfConfig":"23"},{"size":170,"mtime":1617895932324,"results":"36","hashOfConfig":"23"},{"size":1080,"mtime":1617895932324,"results":"37","hashOfConfig":"23"},{"size":2156,"mtime":1617895932324,"results":"38","hashOfConfig":"23"},{"size":265,"mtime":1617895932324,"results":"39","hashOfConfig":"23"},{"size":2016,"mtime":1617895932324,"results":"40","hashOfConfig":"23"},{"size":2772,"mtime":1617895932324,"results":"41","hashOfConfig":"23"},{"size":1226,"mtime":1617895932324,"results":"42","hashOfConfig":"23"},{"size":1727,"mtime":1617895932324,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1go7oxu",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"/home/evindu/Projects/Private/Data-model-ui/src/index.js",[],["92","93"],"/home/evindu/Projects/Private/Data-model-ui/src/App.js",["94","95"],"import './App.css';\nimport clsx from 'clsx';\nimport {compose} from \"redux\";\nimport {firestoreConnect, withFirebase} from \"react-redux-firebase\";\nimport {connect} from 'react-redux';\nimport MenuBar from \"./Components/MenuBar\";\nimport React from \"react\";\nimport LoginPage from './Containers/LoginPage/index';\nimport HomePage from './Containers/HomePage/index';\nimport DashboardPage from './Containers/DashboardPage/index';\nimport LoadingIndicator from \"./Components/LoadinfIndicator\";\nimport {Route, Switch} from \"react-router\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Button from \"@material-ui/core/Button\";\nimport {auth} from \"./utils/firebaseConfig\";\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\nfunction App(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n    if (!props.auth.isLoaded || props.loading) {\n        return <LoadingIndicator/>\n    }\n    const handleClick = async () => {\n        await auth.signOut();\n        window.location.href = '/';\n    };\n\n  return (\n      <>\n        <MenuBar />\n          {!props.auth.uid ? (\n              <Switch>\n                  <Route path=\"/\" component={LoginPage}/>\n              </Switch>\n          ) : (\n              <div className={classes.root}>\n                  <CssBaseline />\n                  <AppBar\n                      position=\"fixed\"\n                      className={clsx(classes.appBar, {\n                          [classes.appBarShift]: open,\n                      })}\n                  >\n                      <Toolbar>\n                          <IconButton\n                              color=\"inherit\"\n                              aria-label=\"open drawer\"\n                              onClick={handleDrawerOpen}\n                              edge=\"start\"\n                              className={clsx(classes.menuButton, open && classes.hide)}\n                          >\n                              <MenuIcon />\n                          </IconButton>\n                          <Typography variant=\"subtitle1\" className={classes.title}>\n                              Intrusion Detection System\n                          </Typography>\n                          {props.auth.uid ? (\n                              <div>\n                                  <Button onClick={handleClick} color=\"inherit\">\n                                      Logout\n                                  </Button>\n                              </div>\n                          ) : (\n                              <div/>\n                          )}\n                      </Toolbar>\n                  </AppBar>\n                  <Drawer\n                      className={classes.drawer}\n                      variant=\"persistent\"\n                      anchor=\"left\"\n                      open={open}\n                      classes={{\n                          paper: classes.drawerPaper,\n                      }}\n                  >\n                      <div className={classes.drawerHeader}>\n                          <IconButton onClick={handleDrawerClose}>\n                              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                          </IconButton>\n                      </div>\n                      <Divider />\n                      <List>\n                          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                              <ListItem button key={text}>\n                                  <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                  <ListItemText primary={text} />\n                              </ListItem>\n                          ))}\n                      </List>\n                      <Divider />\n                      <List>\n                          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                              <ListItem button key={text}>\n                                  <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                  <ListItemText primary={text} />\n                              </ListItem>\n                          ))}\n                      </List>\n                  </Drawer>\n                  <main\n                      className={clsx(classes.content, {\n                          [classes.contentShift]: open,\n                      })}\n                  >\n                      <div className={classes.drawerHeader} />\n                      <Switch>\n                          <Route exact path=\"/\" component={DashboardPage}/>\n                          <Route exact path=\"/homepage\" component={HomePage}/>\n                      </Switch>\n                  </main>\n              </div>\n\n          )}\n      </>\n  );\n}\nconst mapStateToProps = ({firebase,loginReducer}) => {\n  return {\n    auth: firebase.auth,\n    loading: loginReducer.loading\n  }\n};\n\nconst mapDispatchToProps = {};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(App);\n","/home/evindu/Projects/Private/Data-model-ui/src/reportWebVitals.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/store.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/utils/firebaseConfig.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/Containers/LoginPage/index.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/Containers/HomePage/index.js",["96","97"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Container from '@material-ui/core/Container';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {firestoreConnect, withFirebase} from \"react-redux-firebase\";\nimport {connect} from \"react-redux\";\nimport LoadingIndicator from \"../../Components/LoadinfIndicator\";\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        marginBottom: 20\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 0,\n    },\n    menuButton: {\n        marginTop: 20,\n    },\n    field: {\n        width: '100%',\n        marginBottom: 20,\n        backgroundColor: 'white'\n    },\n    table: {\n        minWidth: 400,\n    },\n});\n\n\nfunction HomePage(props) {\n    const classes = useStyles();\n    if (!props.Datasets) {\n        return <LoadingIndicator/>\n    }\n    const dataset = (props.Datasets[0]);\n\n    function intersperse(arr, sep) {\n        if (arr.length === 0) {\n            return [];\n        }\n\n        return arr.slice(1).reduce(function(xs, x, i) {\n            return xs.concat([sep, x]);\n        }, [arr[0]]);\n    }\n    return (\n        <Container maxWidth=\"md\">\n            <h2\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    padding: 20,\n                }}\n            >\n                Dataset Visualizer\n            </h2>\n        <Card className={classes.root}>\n            <CardContent>\n                   <div>\n                       <a href={dataset.visualizer_url} target=\"_blank\">\n                       <img src={dataset.visualizer_url} style={{ marginTop: 20 }} />\n                       </a>\n                   </div>\n            </CardContent>\n        </Card>\n            <h2\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    padding: 20,\n                }}\n            >\n                Dataset Details\n            </h2>\n            <Card className={classes.root}>\n                <CardContent>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableBody>\n                                <TableRow >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        Dataset :\n                                    </TableCell>\n                                    <TableCell align=\"left\">{dataset.name}</TableCell>\n                                </TableRow>\n                                <TableRow >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        Traffic Type :\n                                    </TableCell>\n                                    <TableCell align=\"left\">{dataset.traffic_type}</TableCell>\n                                </TableRow>\n                                <TableRow >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        Attack Type(s) :\n                                    </TableCell>\n                                    <TableCell align=\"left\">{intersperse(dataset.attack_type,', ')}</TableCell>\n                                </TableRow>\n                                <TableRow >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        Total number of features :\n                                    </TableCell>\n                                    <TableCell align=\"left\">{dataset.no_of_features}</TableCell>\n                                </TableRow>\n                                <TableRow >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        Data points :\n                                    </TableCell>\n                                    <TableCell align=\"left\">{dataset.data_points}</TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                </CardContent>\n            </Card>\n</Container>\n\n);\n}\nconst mapStateToProps = ({firestore}) => {\n    return {\n        Datasets: firestore.ordered['Datasets']\n    }\n};\n\nconst mapDispatchToProps = {};\n\nexport default withRouter(compose(firestoreConnect(() => [\n    { collection: 'Datasets' },\n]),connect(mapStateToProps, mapDispatchToProps))(withFirebase(HomePage)));","/home/evindu/Projects/Private/Data-model-ui/src/redux/login/reducer.js",["98"],"import produce from \"immer\";\n\nimport { LOGIN_USER, LOGIN_USER_ERROR, LOGIN_USER_SUCCESS, RETURN_STATE, } from \"./actions\";\n\nconst INIT_STATE = {\n    loggedIn: false,\n    loading: false,\n    error: null\n};\n\nexport default function loginReducer(state = INIT_STATE, action) {\n    return produce(state, draft => {\n        switch (action.type) {\n            case LOGIN_USER:\n                draft.loading = true;\n                break;\n            case LOGIN_USER_ERROR:\n                draft.error = action.payload;\n                draft.loading = false;\n                break;\n            case LOGIN_USER_SUCCESS:\n                draft.loggedIn = true;\n                draft.loading = false;\n                draft.error = null;\n                break;\n            default:\n              break;\n        }\n    });\n}\n","/home/evindu/Projects/Private/Data-model-ui/src/redux/login/saga.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/Containers/DashboardPage/index.js",["99","100","101","102","103","104","105","106","107"],"import React, { Fragment } from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Container from '@material-ui/core/Container';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport Bars from 'react-bars';\nimport {compose} from \"redux\";\nimport {firestoreConnect, withFirebase} from \"react-redux-firebase\";\nimport {connect} from \"react-redux\";\nimport LoadingIndicator from \"../../Components/LoadinfIndicator\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport {NotificationManager} from '../../Components/react-notifications';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst styles = theme => ({\n    root: {\n        minWidth: 275,\n        marginBottom: 20\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 0,\n    },\n    menuButton: {\n        marginTop: 20,\n    },\n    field: {\n        width: '100%',\n        marginBottom: 20,\n        backgroundColor: 'white'\n    },\n    table: {\n        minWidth: 400,\n    },\n    formControl: {\n        margin: 1,\n        minWidth: 120,\n    },\n});\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n\n}\n\n\nfunction DashboardPage({classes, Datasets, Notifications}) {\n\n    const [dataSet, setDataSet] = React.useState('UNSW-NB15');\n    const [open, setOpen] = React.useState(false);\n    const [_open, _setOpen] = React.useState(false);\n\n    const handleClick = () => {\n        _setOpen(true);\n    };\n\n    React.useEffect(() => {\n        handleClick()\n    }, [Notifications]);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const _handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        _setOpen(false);\n    };\n\n    if (!Datasets) {\n        return <LoadingIndicator/>\n    }\n    const handleChange = event => {\n        setDataSet(event.target.value);\n    };\n\n    const dataset = (Datasets.filter(el => el.name === dataSet)[0]);\n\n    function intersperse(arr, sep) {\n        if (arr.length === 0) {\n            return [];\n        }\n\n        return arr.slice(1).reduce(function(xs, x, i) {\n            return xs.concat([sep, x]);\n        }, [arr[0]]);\n    }\n\n    return(\n\n    <Container >\n        <Snackbar open={_open} autoHideDuration={6000} onClose={_handleClose}>\n            <Alert onClose={_handleClose} severity=\"error\">\n                An intrusion detected !\n            </Alert>\n        </Snackbar>\n        {/*<Alert severity=\"error\">This is an error message!</Alert>*/}\n        <SimpleDialog open={open} dataSet={dataset} onClose={handleClose} />\n\n            <h1\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}\n            >\n                {dataset.name}\n            </h1>\n        <h5\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                color: 'blue'\n            }}\n            onClick={() => handleClickOpen()}\n        >\n            Click Here\n        </h5>\n        <Grid container spacing={3}>\n            <Grid item xs={6} key={'1'}>\n\n\n            <Card className={classes.root}>\n                <h4\n                    style={{\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        paddingLeft: 20,\n                    }}\n                >\n                    Model Information\n                </h4>\n                <CardContent>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableBody>\n                            <TableRow >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Dataset :\n                                </TableCell>\n\n                                <TableCell align=\"left\" >\n                                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                                    <Select\n                                        labelId=\"demo-simple-select-outlined-label\"\n                                        id=\"demo-simple-select-outlined\"\n                                        value={dataset.name}\n                                        onChange={handleChange}\n                                        style={{ borderRadius: 8 + 'px' }}\n                                    >\n                                        {Datasets.map(el => <MenuItem key={el.name} value={el.name}>{el.name}</MenuItem> )}\n                                    </Select>\n                                </FormControl>\n                                </TableCell>\n                            </TableRow>\n                            <TableRow >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Algorithms used :\n                                </TableCell>\n                                <TableCell align=\"left\">{intersperse(dataset.algorithms,', ')}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </CardContent>\n            </Card>\n                <Card className={classes.root}>\n                    <h4\n                        style={{\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            paddingLeft: 20,\n                        }}\n                    >\n                        Performance Metrics\n                    </h4>\n                    <CardContent>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableBody>\n                                <TableRow >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        Accuracy :\n                                    </TableCell>\n                                    <TableCell align=\"left\">{dataset.accuracy}</TableCell>\n                                </TableRow>\n                                <TableRow >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        FAR :\n                                    </TableCell>\n                                    <TableCell align=\"left\">{dataset.far}</TableCell>\n                                </TableRow>\n                                <TableRow >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        Recall :\n                                    </TableCell>\n                                    <TableCell align=\"left\">{dataset.recall}</TableCell>\n                                </TableRow>\n                                <TableRow >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        Precision :\n                                    </TableCell>\n                                    <TableCell align=\"left\">{dataset.precision}</TableCell>\n                                </TableRow>\n                                <TableRow >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        f1score :\n                                    </TableCell>\n                                    <TableCell align=\"left\">{dataset.f1_score}</TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </CardContent>\n                </Card>\n                {dataset.plot_features ?\n                    <Card className={classes.root}>\n                        <h3\n                            style={{\n                                justifyContent: 'center',\n                                alignItems: 'center',\n                                paddingLeft: 20,\n                            }}\n                        >\n                            Plot of Features\n                        </h3>\n                        <CardContent>\n                            <div>\n                                <a href={dataset.plot_features} target=\"_blank\">\n                                    <img src={dataset.plot_features} style={{ marginLeft: 60, height: 190, width: 400, display: 'flex' }} />\n                                </a>\n                            </div>\n                        </CardContent>\n                    </Card> : <div/> }\n            </Grid>\n            <Grid item xs={6} key={'2'}>\n            <Card className={classes.root}>\n                <h4\n                    style={{\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        paddingLeft: 20,\n                    }}\n                >\n                    Attack Detection\n                </h4>\n                <CardContent>\n\n                    <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell></TableCell>\n                                    <TableCell align=\"center\">Predicted attack detection</TableCell>\n                                    <TableCell align=\"center\">Actual detection</TableCell>\n                                </TableRow>\n                            </TableHead>\n                        <TableBody>\n\n                        <TableRow >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Normal :\n                                </TableCell>\n                                <TableCell align=\"center\">{dataset.nor.predict ? 'Yes' : 'No'}</TableCell>\n                                <TableCell align=\"center\">{dataset.nor.actual !== undefined ? dataset.nor.actual : '-'}</TableCell>\n                            </TableRow>\n                            <TableRow >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    DoS :\n                                </TableCell>\n                                <TableCell align=\"center\">{dataset.dos.predict ? 'Yes' : 'No'}</TableCell>\n                                <TableCell align=\"center\">{dataset.dos.actual !== undefined ? dataset.dos.actual : '-'}</TableCell>\n                            </TableRow>\n                            <TableRow >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    SQL injection :\n                                </TableCell>\n                                <TableCell align=\"center\">{dataset.sql.predict ? 'Yes' : 'No'}</TableCell>\n                                <TableCell align=\"center\">{dataset.sql.actual !== undefined ? dataset.sql.actual : '-'}</TableCell>\n                            </TableRow>\n                            <TableRow >\n                                <TableCell component=\"th\" scope=\"row\">\n                                   Generic :\n                                </TableCell>\n                                <TableCell align=\"center\">{dataset.DDos.predict ? 'Yes' : 'No'}</TableCell>\n                                <TableCell align=\"center\">{dataset.DDos.actual !== undefined ? dataset.DDos.actual : '-'}</TableCell>\n                            </TableRow>\n                            <TableRow >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Other :\n                                </TableCell>\n                                <TableCell align=\"center\">{dataset.other.predict ? 'Yes' : 'No'}</TableCell>\n                                <TableCell align=\"center\">{dataset.other.actual !== undefined ? dataset.other.actual : '-'}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </CardContent>\n            </Card>\n                {dataset.opt_corelation ?\n                <Card className={classes.root}>\n                    <h3\n                        style={{\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            paddingLeft: 20,\n                        }}\n                    >\n                       Output Corelation\n                    </h3>\n                        <CardContent>\n                            <div>\n                                <a href={dataset.opt_corelation} target=\"_blank\">\n                                    <img src={dataset.opt_corelation} style={{ marginLeft: 60, height: 400, width: 400, display: 'flex' }} />\n                                </a>\n                            </div>\n                        </CardContent>\n                </Card> : <div/> }\n            </Grid>\n        </Grid>\n        </Container>\n    )\n}\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        marginBottom: 20\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 0,\n    },\n    menuButton: {\n        marginTop: 20,\n    },\n    field: {\n        width: '100%',\n        marginBottom: 20,\n        backgroundColor: 'white'\n    },\n    table: {\n        minWidth: 400,\n    },\n});\nfunction SimpleDialog(props) {\n    const classes = useStyles();\n\n    const {\n        dataSet, onClose, open\n    } = props;\n    if (!dataSet ) {\n        return (<LoadingIndicator />);\n    }\n    const handleClose = () => {\n        onClose();\n    };\n\n    function intersperse(arr, sep) {\n        if (arr.length === 0) {\n            return [];\n        }\n\n        return arr.slice(1).reduce(function(xs, x, i) {\n            return xs.concat([sep, x]);\n        }, [arr[0]]);\n    }\n\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n        <Container >\n            {/*<DialogTitle id=\"simple-dialog-title\">Add New Waste Type</DialogTitle>*/}\n            <h2\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    padding: 20,\n                }}\n            >\n                Dataset Visualizer\n            </h2>\n            <Card className={classes.root}>\n                <CardContent>\n                    <div>\n                        <a href={dataSet.visualizer_url} target=\"_blank\">\n                            <img src={dataSet.visualizer_url} style={{ marginTop: 20, height: 400, width: 400 }} />\n                        </a>\n                    </div>\n                </CardContent>\n            </Card>\n            <h2\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    padding: 20,\n                }}\n            >\n                Dataset Details\n            </h2>\n            <Card className={classes.root}>\n                <CardContent>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableBody>\n                            <TableRow >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Dataset :\n                                </TableCell>\n                                <TableCell align=\"left\">{dataSet.name}</TableCell>\n                            </TableRow>\n                            <TableRow >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Traffic Type :\n                                </TableCell>\n                                <TableCell align=\"left\">{dataSet.traffic_type}</TableCell>\n                            </TableRow>\n                            <TableRow >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Attack Type(s) :\n                                </TableCell>\n                                <TableCell align=\"left\">{intersperse(dataSet.attack_type,', ')}</TableCell>\n                            </TableRow>\n                            <TableRow >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Total number of features :\n                                </TableCell>\n                                <TableCell align=\"left\">{dataSet.no_of_features}</TableCell>\n                            </TableRow>\n                            <TableRow >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    Data points :\n                                </TableCell>\n                                <TableCell align=\"left\">{dataSet.data_points}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                </CardContent>\n            </Card>\n        </Container>\n\n        </Dialog>\n    );\n}\n\nconst mapStateToProps = ({firestore}) => {\n    return {\n        Datasets: firestore.ordered['Datasets'],\n        Notifications: firestore.ordered['Notifications']\n    }\n};\n\nconst mapDispatchToProps = {};\n\nexport default compose(firestoreConnect(() => [\n    { collection: 'Datasets' },\n    { collection: 'Notifications' },\n]),connect(mapStateToProps, mapDispatchToProps))(withStyles(styles)(withFirebase(DashboardPage)));","/home/evindu/Projects/Private/Data-model-ui/src/Components/MenuBar/index.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/Components/LoadinfIndicator/index.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/redux/login/actions.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/Components/LoadinfIndicator/Wrapper.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/Components/LoadinfIndicator/Circle.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/Components/LoginForm/index.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/Components/react-notifications/index.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/Components/react-notifications/Notifications.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/Components/react-notifications/NotificationManager.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/Components/react-notifications/NotificationContainer.js",[],"/home/evindu/Projects/Private/Data-model-ui/src/Components/react-notifications/Notification.js",[],["108","109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":4,"column":9,"nodeType":"116","messageId":"117","endLine":4,"endColumn":25},{"ruleId":"114","severity":1,"message":"118","line":4,"column":27,"nodeType":"116","messageId":"117","endLine":4,"endColumn":39},{"ruleId":"119","severity":1,"message":"120","line":72,"column":57,"nodeType":"121","endLine":72,"endColumn":72},{"ruleId":"122","severity":1,"message":"123","line":73,"column":24,"nodeType":"124","endLine":73,"endColumn":86},{"ruleId":"114","severity":1,"message":"125","line":3,"column":60,"nodeType":"116","messageId":"117","endLine":3,"endColumn":72},{"ruleId":"114","severity":1,"message":"126","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"127","line":11,"column":8,"nodeType":"116","messageId":"117","endLine":11,"endColumn":12},{"ruleId":"114","severity":1,"message":"128","line":21,"column":9,"nodeType":"116","messageId":"117","endLine":21,"endColumn":28},{"ruleId":"119","severity":1,"message":"120","line":244,"column":65,"nodeType":"121","endLine":244,"endColumn":80},{"ruleId":"122","severity":1,"message":"123","line":245,"column":37,"nodeType":"124","endLine":245,"endColumn":141},{"ruleId":"119","severity":1,"message":"120","line":326,"column":66,"nodeType":"121","endLine":326,"endColumn":81},{"ruleId":"122","severity":1,"message":"123","line":327,"column":37,"nodeType":"124","endLine":327,"endColumn":142},{"ruleId":"119","severity":1,"message":"120","line":401,"column":58,"nodeType":"121","endLine":401,"endColumn":73},{"ruleId":"122","severity":1,"message":"123","line":402,"column":29,"nodeType":"124","endLine":402,"endColumn":116},{"ruleId":"110","replacedBy":"129"},{"ruleId":"112","replacedBy":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'firestoreConnect' is defined but never used.","Identifier","unusedVar","'withFirebase' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RETURN_STATE' is defined but never used.","'Fragment' is defined but never used.","'Bars' is defined but never used.","'NotificationManager' is defined but never used.",["131"],["132"],"no-global-assign","no-unsafe-negation"]